version: 2.1
parameters:
  image_name:
    type: string
    default: "quay.io/hmpps/new-nomis-ui"
  app_name:
    type: string
    default: "notm"

orbs:
  dps: ministryofjustice/dps@dev:alpha

executors:
  builder:
    docker:
      - image: circleci/node:12.16.1-buster-browsers
    working_directory: ~/app

jobs:
  build:
    executor: builder
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}
      - run:
          name: Install Dependencies
          command: yarn --frozen-lockfile
      - save_cache:
          key: node_modules-{{ checksum "yarn.lock" }}-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run eslint
          command: yarn lint:js:ci
      - run:
          name: Run scss-lint
          command: yarn stylelint:ci
      - run:
          name: Run Tests
          command: |
            set -e
            yarn test --maxWorkers=2
      - run: export NODE_ENV=production yarn build
      - store_artifacts:
          path: test-report.html
      - store_artifacts:
          path: scss-report.txt
      - store_artifacts:
          path: eslint-report.html
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build

  integration_tests:
    working_directory: ~/app
    docker:
      - image: circleci/node:12.16.1-buster-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Run the node app.
          command: yarn start-feature
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 10
      - restore_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: gradle-cache-{{ checksum "notm-specs/build.gradle" }}
      - run:
          name: Run Integration Tests
          command: ./gradlew build --info
      - save_cache:
          key: gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - /home/circleci/.gradle/wrapper
      - save_cache:
          key: gradle-cache-{{ checksum "notm-specs/build.gradle" }}
          paths:
            - /home/circleci/.gradle/caches
      - store_artifacts:
          path: notm-specs/build/reports
          destination: integration/spock
      - store_artifacts:
          path: notm-specs/build/geb-reports
          destination: integration/geb
      - store_test_results:
          path: notm-specs/build/test-results



  security_audit:
    executor: builder
    steps:
      - checkout
      - run:
          name: update-yarn
          command: 'sudo yarn global add yarn'
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-yarn
          command: 'yarn --frozen-lockfile --no-audit'
      - run:
          name: run-security-audit
          command: 'yarn security_audit'

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      #- build:
      #    filters:
      #      tags:
      #        ignore: /.*/
      #- integration_tests:
      #    requires:
      #      - build
      - dps/build_docker:
          name: build_docker
          image_name: << pipeline.parameters.image_name >>
          filters:
            branches:
              only:
                - master
                - orb_testing 
      - dps/deploy_env:
          name: deploy_dev
          env: "dev"
          app_name: << pipeline.parameters.app_name >>
          filters:
            branches:
              only:
                - master
                - orb_testing
          requires:
            - build_docker
            #- integration_tests
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - dps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          app_name: << pipeline.parameters.app_name >>
          context: notm-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - dps/deploy_env:
          name: deploy_prod
          env: "prod"
          app_name: << pipeline.parameters.app_name >>
          slack_notification: true
          context: notm-prod
          requires:
            - request-prod-approval

  scheduled:
    triggers:
      - schedule:
          cron: "0 7 * * 1-5"
          filters:
            branches:
              only:
                - master
    jobs:
      - security_audit
